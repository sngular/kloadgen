<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.5">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Plan de Pruebas" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="Variables definidas por el Usuario" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Grupo de Hilos" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Controlador Bucle" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <com.sngular.kloadgen.config.kafkaheaders.KafkaHeadersConfigElement guiclass="TestBeanGUI" testclass="com.sngular.kloadgen.config.kafkaheaders.KafkaHeadersConfigElement" testname="KLG - Kafka Headers Config" enabled="true">
          <collectionProp name="kafkaHeaders"/>
        </com.sngular.kloadgen.config.kafkaheaders.KafkaHeadersConfigElement>
        <hashTree/>
        <com.sngular.kloadgen.config.schemaregistry.SchemaRegistryConfigElement guiclass="TestBeanGUI" testclass="com.sngular.kloadgen.config.schemaregistry.SchemaRegistryConfigElement" testname="Schema Registry Config Element" enabled="true">
          <stringProp name="schemaRegistryName">Apicurio</stringProp>
          <collectionProp name="schemaRegistryProperties">
            <elementProp name="Config properties" elementType="com.sngular.kloadgen.model.PropertyMapping" testname="Config properties">
              <stringProp name="propertyName">schema.registry.auth.enabled</stringProp>
              <stringProp name="propertyValue">NO</stringProp>
            </elementProp>
            <elementProp name="Config properties" elementType="com.sngular.kloadgen.model.PropertyMapping" testname="Config properties">
              <stringProp name="propertyName">schema.registry.auth.method</stringProp>
              <stringProp name="propertyValue">BASIC</stringProp>
            </elementProp>
            <elementProp name="Config properties" elementType="com.sngular.kloadgen.model.PropertyMapping" testname="Config properties">
              <stringProp name="propertyName">schema.registry.username</stringProp>
              <stringProp name="propertyValue">&lt;username&gt;</stringProp>
            </elementProp>
            <elementProp name="Config properties" elementType="com.sngular.kloadgen.model.PropertyMapping" testname="Config properties">
              <stringProp name="propertyName">schema.registry.password</stringProp>
              <stringProp name="propertyValue">&lt;password&gt;</stringProp>
            </elementProp>
            <elementProp name="Config properties" elementType="com.sngular.kloadgen.model.PropertyMapping" testname="Config properties">
              <stringProp name="propertyName">schema.registry.bearer</stringProp>
              <stringProp name="propertyValue">&lt;bearer&gt;</stringProp>
            </elementProp>
          </collectionProp>
          <stringProp name="schemaRegistryUrl">http://localhost:8080</stringProp>
        </com.sngular.kloadgen.config.schemaregistry.SchemaRegistryConfigElement>
        <hashTree/>
        <com.sngular.kloadgen.config.valueserialized.ValueSerializedConfigElement guiclass="TestBeanGUI" testclass="com.sngular.kloadgen.config.valueserialized.ValueSerializedConfigElement" testname="KLG - Value Schema Serializer Config" enabled="true">
          <stringProp name="valueNameStrategy">io.apicurio.registry.serde.avro.strategy.RecordIdStrategy</stringProp>
          <collectionProp name="valueSchemaProperties">
            <elementProp name="" elementType="com.sngular.kloadgen.model.FieldValueMapping">
              <stringProp name="fieldName">id</stringProp>
              <intProp name="valueLength">0</intProp>
              <stringProp name="fieldType">int</stringProp>
              <stringProp name="fieldValuesList"></stringProp>
              <boolProp name="required">true</boolProp>
              <boolProp name="ancestorRequired">true</boolProp>
            </elementProp>
            <elementProp name="" elementType="com.sngular.kloadgen.model.FieldValueMapping">
              <stringProp name="fieldName">twitterAccounts[].status</stringProp>
              <intProp name="valueLength">0</intProp>
              <stringProp name="fieldType">enum</stringProp>
              <stringProp name="fieldValuesList">PENDING,ACTIVE,DENIED,EXPIRED,REVOKED</stringProp>
              <boolProp name="required">true</boolProp>
              <boolProp name="ancestorRequired">true</boolProp>
            </elementProp>
            <elementProp name="" elementType="com.sngular.kloadgen.model.FieldValueMapping">
              <stringProp name="fieldName">twitterAccounts[].status2</stringProp>
              <intProp name="valueLength">0</intProp>
              <stringProp name="fieldType">enum</stringProp>
              <stringProp name="fieldValuesList">TEST1,TEST2,TEST3,TEST4</stringProp>
              <boolProp name="required">true</boolProp>
              <boolProp name="ancestorRequired">true</boolProp>
            </elementProp>
            <elementProp name="" elementType="com.sngular.kloadgen.model.FieldValueMapping">
              <stringProp name="fieldName">toDoItems[].status3</stringProp>
              <intProp name="valueLength">0</intProp>
              <stringProp name="fieldType">enum</stringProp>
              <stringProp name="fieldValuesList">HIDDEN,ACTIONABLE,DONE,ARCHIVED,DELETED</stringProp>
              <boolProp name="required">true</boolProp>
              <boolProp name="ancestorRequired">true</boolProp>
            </elementProp>
            <elementProp name="" elementType="com.sngular.kloadgen.model.FieldValueMapping">
              <stringProp name="fieldName">toDoItems[].status4</stringProp>
              <intProp name="valueLength">0</intProp>
              <stringProp name="fieldType">enum</stringProp>
              <stringProp name="fieldValuesList">HIDDEN,ACTIONABLE,DONE,ARCHIVED,DELETED</stringProp>
              <boolProp name="required">true</boolProp>
              <boolProp name="ancestorRequired">true</boolProp>
            </elementProp>
          </collectionProp>
          <stringProp name="valueSchemaType">AVRO</stringProp>
          <stringProp name="valueSerializerConfiguration">io.apicurio.registry.serde.avro.AvroKafkaSerializer</stringProp>
          <stringProp name="valueSubjectName">User</stringProp>
        </com.sngular.kloadgen.config.valueserialized.ValueSerializedConfigElement>
        <hashTree/>
        <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="PeticiÃ³n Java" enabled="true">
          <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="bootstrap.servers" elementType="Argument">
                <stringProp name="Argument.name">bootstrap.servers</stringProp>
                <stringProp name="Argument.value">localhost:29092</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="zookeeper.servers" elementType="Argument">
                <stringProp name="Argument.name">zookeeper.servers</stringProp>
                <stringProp name="Argument.value">localhost:2181</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="kafka.topic.name" elementType="Argument">
                <stringProp name="Argument.name">kafka.topic.name</stringProp>
                <stringProp name="Argument.value">topic-to-send-message</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="compression.type" elementType="Argument">
                <stringProp name="Argument.name">compression.type</stringProp>
                <stringProp name="Argument.value">none</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="batch.size" elementType="Argument">
                <stringProp name="Argument.name">batch.size</stringProp>
                <stringProp name="Argument.value">16384</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="linger.ms" elementType="Argument">
                <stringProp name="Argument.name">linger.ms</stringProp>
                <stringProp name="Argument.value">0</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="buffer.memory" elementType="Argument">
                <stringProp name="Argument.name">buffer.memory</stringProp>
                <stringProp name="Argument.value">33554432</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="acks" elementType="Argument">
                <stringProp name="Argument.name">acks</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="send.buffer.bytes" elementType="Argument">
                <stringProp name="Argument.name">send.buffer.bytes</stringProp>
                <stringProp name="Argument.value">131072</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="receive.buffer.bytes" elementType="Argument">
                <stringProp name="Argument.name">receive.buffer.bytes</stringProp>
                <stringProp name="Argument.value">32768</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="security.protocol" elementType="Argument">
                <stringProp name="Argument.name">security.protocol</stringProp>
                <stringProp name="Argument.value">PLAINTEXT</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="kerberos.auth.enabled" elementType="Argument">
                <stringProp name="Argument.name">kerberos.auth.enabled</stringProp>
                <stringProp name="Argument.value">NO</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="jaas.enabled" elementType="Argument">
                <stringProp name="Argument.name">jaas.enabled</stringProp>
                <stringProp name="Argument.value">NO</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="java.security.auth.login.config" elementType="Argument">
                <stringProp name="Argument.name">java.security.auth.login.config</stringProp>
                <stringProp name="Argument.value">&lt;JAAS File Location&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="java.security.krb5.conf" elementType="Argument">
                <stringProp name="Argument.name">java.security.krb5.conf</stringProp>
                <stringProp name="Argument.value">&lt;krb5.conf location&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="sasl.kerberos.service.name" elementType="Argument">
                <stringProp name="Argument.name">sasl.kerberos.service.name</stringProp>
                <stringProp name="Argument.value">kafka</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="sasl.mechanism" elementType="Argument">
                <stringProp name="Argument.name">sasl.mechanism</stringProp>
                <stringProp name="Argument.value">GSSAPI</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ssl.enabled" elementType="Argument">
                <stringProp name="Argument.name">ssl.enabled</stringProp>
                <stringProp name="Argument.value">NO</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ssl.key.password" elementType="Argument">
                <stringProp name="Argument.name">ssl.key.password</stringProp>
                <stringProp name="Argument.value">&lt;Key Password&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ssl.keystore.location" elementType="Argument">
                <stringProp name="Argument.name">ssl.keystore.location</stringProp>
                <stringProp name="Argument.value">&lt;Keystore Location&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ssl.keystore.password" elementType="Argument">
                <stringProp name="Argument.name">ssl.keystore.password</stringProp>
                <stringProp name="Argument.value">&lt;Keystore Password&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ssl.truststore.location" elementType="Argument">
                <stringProp name="Argument.name">ssl.truststore.location</stringProp>
                <stringProp name="Argument.value">&lt;Truststore Location&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ssl.truststore.password" elementType="Argument">
                <stringProp name="Argument.name">ssl.truststore.password</stringProp>
                <stringProp name="Argument.value">&lt;Truststore Password&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="client.id" elementType="Argument">
                <stringProp name="Argument.name">client.id</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="security.providers" elementType="Argument">
                <stringProp name="Argument.name">security.providers</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ssl.enabled.protocols" elementType="Argument">
                <stringProp name="Argument.name">ssl.enabled.protocols</stringProp>
                <stringProp name="Argument.value">TLSv1.2,TLSv1.3</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ssl.endpoint.identification.algorithm" elementType="Argument">
                <stringProp name="Argument.name">ssl.endpoint.identification.algorithm</stringProp>
                <stringProp name="Argument.value">https</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ssl.keymanager.algorithm" elementType="Argument">
                <stringProp name="Argument.name">ssl.keymanager.algorithm</stringProp>
                <stringProp name="Argument.value">SunX509</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ssl.keystore.type" elementType="Argument">
                <stringProp name="Argument.name">ssl.keystore.type</stringProp>
                <stringProp name="Argument.value">JKS</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ssl.provider" elementType="Argument">
                <stringProp name="Argument.name">ssl.provider</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ssl.protocol" elementType="Argument">
                <stringProp name="Argument.name">ssl.protocol</stringProp>
                <stringProp name="Argument.value">TLSv1.3</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="auto.register.schemas" elementType="Argument">
                <stringProp name="Argument.name">auto.register.schemas</stringProp>
                <stringProp name="Argument.value">false</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="classname">com.sngular.kloadgen.sampler.KafkaProducerSampler</stringProp>
        </JavaSampler>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
